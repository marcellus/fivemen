<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAWliZAI2JqgB2a5UAjnmTAAAAAACJZ3kAkImKADMdHQAwHR0AU1BQADQf
        HQAsIyIANyAdAOve3ACAY10AwKKbAMGGcQBJNS4APSUbAH4xCgB9MQoAjkAZAJdeQQC4aDsAtYBiAMSN
        bgDDjW4AxI5xAMOOcADHk3UA0HxKAMeRbwDnspMAyb+5ALyCWACNgHYArE0AAKFJAADFhlMA4LmaANy6
        nwCnUAAAok4AAKJNAADKiVAAPi8hAOS9mQBURzsAtVsAANCOTADMjE8A3qNqAOi3hgDrwZcA576XANXM
        wwD27+gAuV8AALdgAAC2XgAAtFwAALNdAAC6ZQkAwXIaAOeMJQDIeicA5Y8xAPGfQwD3q1YA15NLAMZr
        AQDRcAIA3HkGAOqECADefQ0A4oAOAN+AEgDkhRYA34IVAOaHGQDggxkA4IQZAOCFGgDmiR0A5okeAOCG
        HQDnih8A2YIdAPKSIgDniyEA444tANqPNwDztm8A+cSHAPPGkwD1z6AA/9mnAO3RrQCpmYUA9eveAP/Q
        jgDr17sA/eK3AP/OewD45MAA/vDYAJaTjADa1LsA2tS8ANnTuwDZ1LwA//fMAOnn2gDP59EAbnlyANHY
        1ADd5uIA6vfyAOnx7gDq+vYA5vTzAHrHxwDg//8A5///AOb29gD5//8A7fPzAOvx8QDj/v8A5f7/AOX6
        +wDh/f8A4/3/AOT9/wDl8fIA7f3/ANvp6wBP5f8A2O/zAOHu8ADk7/EA4+7wAD7d/wCByNYA1Pj/ANzs
        7wDf7vEA3+3wAC7I7gBM2fgAaOL/AHrk/gCF6f8A2u7zANrr7wDh8vYA3u7yAODt8ADj7/IA6PHzAA++
        7QAm0f8ASczvAFTU9wBUzO4Ad9/8ALfw/wDZ7/UA3O/0ANrs8QDd7PAA3OvvAODu8gApu+cAM8PuADzJ
        9gBWzPMAWtT6AGTV+gBhzvIAZNH1AG7W+ABy2voAft78ANDp8QDa8PcA2+vwAOTx9QA2ueUANK/dAE7M
        +ABazvYANHKIAGbG6AB01vcAmOD5AMHn9ADY7vYA2uzyAN/u8wDd6/AA5u/yAF5hYgBRvOYAddT5ANnv
        +ADa7fUA2ez0ANzv9wDa6/IA2erxAN3s8gDi7/QA4e3yABGb2gAgn9cA2/D5AN/s8gBLrt4A5Pb/ACya
        1gA6ndUAL4vLAEye1gAhkeEAMofIANPg7AAoZqQAIURoAF5fYAAveccA0tzoAFt6pAAITbUAfI+wAJar
        0QABNqoADT+qAFl6yQCLjZIAACqgAAcwnAAcQKYAPV23AAArsQAGCA4Aj5CXADlEoQB0eaIALS2ZAKen
        pwCWlpYAlZWVAIeHhwB1dXUAAAAAAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAT9
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v76FhQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQV
        C/wXHxsZGRkZGRkZGRkZGRsbGxkZGRkZGRkZGRkbHR4I/Bh7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t7
        e3t7Jwj8GHvQ0NDQ0NDQ0NDQ23dhXV6rm9DQ0NDQ0NDQ0HsnCPwie9Crq6ur0NB3aGHJ7vcANMl7ZWF0
        0NCrq6vQeycI/CJ70Kur0NDQfOsDXWTt6ekzYAEDNGXQ0Kurq5J7Lgj8InvQq9DQknzr8OwCENqj2hgF
        7PQCZtvQq9DQ0HsuCPwme9CrktDQd+vd2u3xspa/8u3c1uhgktDQq5LQezYI/CZ70NDQ0HxvcZiY2uG0
        tKPe3ZWheWdfY9CSq9B7Ngj8JnvQ0NB84vfztpeltrKxsaOjoq/m+Q9j0NDQ0Hs2CPwme9DQ0Hzi7PHf
        l7W0v8HLvqKivfLs+Gnb0NDQezYI/Cx70NDQycXawZfCtLZzBgnj3NytvdbqadDQ0NB7Ngj8LHvQ0MnJ
        0JiYl8K/pg0GEeTg162UoI840NDQ0HteCPwxe8nQycnQw5eXwqOmDe8RwK+8rq2txH7J0NDJe14I/Cx7
        ydDQycl84u61o6YN7xHAia/cIGN8ycnQ0Ml7Xgj8MXvQydDQyXzi87W+pg3vEcCOrtc3fsnJ0NDQ0Hte
        CPxFe8nJycnJycnDtrSQIcoLcpeupMnJycnJycnJe14I/EV7ycnJycnJyX7F0GNiCfUjfcR+ycnJycnJ
        ycl7Xgj8RXvJycnJycnJyX5+fjdqynOHfsnJycnJycnJyXteCPxFe9vb29vb29vb29vbe4d9h9vb29vb
        29vb29vbe14S/EJzbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxzXC38PikrKysrKysrKysrKysrKysr
        KysrKyUlKyUrJCRHLfw+OTAwMDAwMDAwMDAwMDAwMDAwMDAwQT8wQToODkwt+kZOQE9ZWU9ZWVlZWU9P
        T09PT01PTU1EQ09cQuoBWC8EXE5AT09PTE9MTE9PT09PT09PTExMSkhKSkhJSUlCBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAT///////////////+AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAA////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAA
        AAAAAAAAAAEAAAABAACViaYAAAAAAIVmfwDFsK8ATzc0AHdWTwB3XVgAsYR5ALuOfAC9kX4AvJF+ALyS
        fwDNsKMA8ebhALyTfwDEoI0AxZp8AJlYKQCtUwAArFIAAKxTAACvaisAslgAAK5WAACtVAAAq1UAALde
        BAC0Xw4AyIVCAMyHRgDZy70A44ETAOKADQDhfw0A44MTAOODFADkhRUA44QVAOSEFgDujBoA6IsfAOSK
        IADZhygA1cq9ANLGtwDRxrcA0se5AP3r0ADbz70A1Mi3ANHGtgDn07QA0Mm+ANDJvQDSy74A9+7SAN3b
        0wD//+8A4uTdAOXq3gDh5N0A5ejiAOTr3gCosqQA2d3YAN3i3ADg598A2+LbANvh2wDZ39kA2uLcANzr
        5gDh//8A5f//AOj//wDp//8A7P//AO7//wDw//8A+P//AOf9/wDh/P8A4vz/AOP8/wDs/f8AgPH/AOD7
        /wDO4uUAY+j/AIXJ1QCwztMA4vv/AN70+ADo+v0AQ52vADzN8wBN1/0AKr/wACaPsABCzPkAY9n8AGrc
        /wC74+8A2/H4AACl4gBTzvsAXNL+AFvK7wBfz/cA5fj/AOf5/wAitOsAfsLdAJLT7gDn+P8ACJzmAMfQ
        1QCDw+wAP5bWAB1ppQAqhtIAE3XLADd+xQDI4PkAI2u9AKnB4AAaSKMAfImhAHuV0AByhLwATFOdAICA
        gABTU1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAQEBAQGDg4ODg4ODg4ODg4ODg4MPCAkJCQkJCQkJ
        CQkJCQmDECsxMSsrMDMxKysxMR4JgwlKSkpPOXsAN09QUFBNCYMJUFBQgAJ/eQeCDE1QUAmDCVBQUHB4
        dlh8cz8vUFAJgwlQUIF6VWRrYF9+A1BQCYMJSlBxbGVmBndvaFpQUAmDCUpQUHVpXAViYVlWUFAJgwlK
        UFB9alcEXmMNUFBKCYMJTVBQTU04hHRNTVBQTQmDCUdBQUE7Ozs9O0FBQTsJgxYSGBIYGBIYEhIYGhoR
        FYMqKCQfHyQkJB8gICcnHBwBAQEBAQEBAQEBAQEBAQEBAf//AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAP//AAA=
</value>
  </data>
</root>